~~~
~~ #%L
~~ prolobjectlink-jpi
~~ %%
~~ Copyright (C) 2019 Prolobjectlink Project
~~ %%
~~ Redistribution and use in source and binary forms, with or without modification,
~~ are permitted provided that the following conditions are met:
~~ 
~~ 1. Redistributions of source code must retain the above copyright notice, this
~~    list of conditions and the following disclaimer.
~~ 
~~ 2. Redistributions in binary form must reproduce the above copyright notice,
~~    this list of conditions and the following disclaimer in the documentation
~~    and/or other materials provided with the distribution.
~~ 
~~ 3. Neither the name of the Prolobjectlink Project nor the names of its contributors
~~    may be used to endorse or promote products derived from this software without
~~    specific prior written permission.
~~ 
~~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
~~ ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
~~ WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
~~ IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
~~ INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
~~ BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
~~ DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
~~ LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
~~ OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
~~ OF THE POSSIBILITY OF SUCH DAMAGE.
~~ #L%
~~~
 ------
 Title
 ------
 Jose Zalacain
 ------
 2019-03-31
 ------

Prolog Programming
 
* Prolog Language
 
 	The Prolog belongs to the declarative programming languages paradigm. the Prolog
 	programs are based on valid conclusion over facts. Prolog is a LP 
 	language specially indicated to modeling problems that imply objects and relations
 	among objects. Prolog have simple syntax, is weakness typed, have simples data 
 	structures, support recursion and is extensible. One Prolog program have two basic
 	components or clause, facts and rules.
 	
 	All Prolog programs are a succession of clauses where every clause end with dot 
 	character. They are two kind of clauses, Facts and Rules. Every Prolog clause have
 	two components, one head and one body. Facts are the case where the clause only have
 	head component but don't have body and they are used to indicate things unconditionally
 	true about some domain. Rule have head and body and both are separate by neck operator
 	(:-). Rules are used to indicate things conditionally true about some domain. Neck
 	operator semantic denote that one condition should be satisfy by the clause head to be
 	true. The clause body specify the condition order to verify for the conclusion or head.
